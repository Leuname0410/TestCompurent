// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCompurent.Data;

#nullable disable

namespace TestCompurent.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522012537_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestCompurent.Models.Entities.AlbumSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("AlbumsSet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steal this album",
                            Price = 9.99f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Toxixity",
                            Price = 14.99f
                        });
                });

            modelBuilder.Entity("TestCompurent.Models.Entities.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Direction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("MusicRadio");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = "admin01",
                            Direction = "Calle Falsa 123",
                            Mail = "admin@example.com",
                            Name = "Administrador",
                            Password = "MusicRadioAdmin",
                            Phone = "1234567890"
                        });
                });

            modelBuilder.Entity("TestCompurent.Models.Entities.PurchaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Album_Id")
                        .HasColumnType("int");

                    b.Property<string>("Client_Id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("PurchaseDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Album_Id = 1,
                            Client_Id = "admin01",
                            PurchaseDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 9.99f
                        },
                        new
                        {
                            Id = 2,
                            Album_Id = 2,
                            Client_Id = "admin01",
                            PurchaseDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Total = 14.99f
                        });
                });

            modelBuilder.Entity("TestCompurent.Models.Entities.SongSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Album_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SongsSet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Album_Id = 2,
                            Name = "Chop Suey"
                        },
                        new
                        {
                            Id = 2,
                            Album_Id = 1,
                            Name = "Bounce"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
